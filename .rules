This is a [Starlight](https://starlight.astro.build/) repository that hosts the
documentation for Tenzir (https://tenzir.com).

## Project Architecture

- Use `pnpm` for package management: `pnpm dev` starts a development server,
  `pnpm build` builds the site, and `pnpm preview` previews the built site. Make
  sure to run `pnpm dev` and `pnpm preview` in the background and to kill them
  after a while, as they do not terminate on their own.
- Prefer [Markdoc](https://markdoc.dev/) for writing documentation over MDX
  where possible.

## Workflow

- For new features or fixes, use *topic branches* that branch off `main` with
  a naming convention of `topic/description`.

- Use `gh` to create a pull request. Make sure to write a separate file for
  the PR body to avoid escaping issues.

### Commit Messages

- The first line succinctly summarizes the changes in no more than 50
  characters. It is capitalized and written in and imperative present tense:
  e.g., "Fix a bug" as opposed to "Fixes a bug" or "Fixed a bug". As a
  mnemonic, prepend "When applied, this commit will" to the commit summary and
  check if it builds a full sentence.

- The first line does not contain a dot at the end. The second line is empty.
  Optional long descriptions as full sentences begin on the third line, indented
  at 72 characters per line, explaining *why* the change is needed, *how* it
  addresses the underlying issue, and what *side-effects* it might have.

## Formatting

- Every file must end with a newline character, but avoid empty lines at the end of a file.
- Avoid empty lines within functions.
- There exist CI jobs for linting, testing, and deploying the site in
  `.github/workflows`. For Markdown, format and lint with
  [markdownlint](https://github.com/DavidAnson/markdownlint). For JavaScript and
  Typescript, use [Prettier](https://prettier.io/) for formatting and
  [ESLint](https://eslint.org/) for linting.

## Best Practices

- Always test your changes locally before issuing a commit. This typically means
  building the site and checking the generated HTML output that the change is
  working as expected.
