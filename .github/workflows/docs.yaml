name: Docs

on:
  push:
    branches: ["main"]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prod

      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Astro
        run: |
          ORIGIN="${{ steps.pages.outputs.origin }}"
          BASE_PATH="${{ steps.pages.outputs.base_path }}"

          if [[ "$BASE_PATH" == "/" ]]; then
            BASE_PATH=""
          fi

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PREVIEW_ORIGIN="https://tenzir.github.io/docs"
            PREVIEW_BASE_PREFIX="$BASE_PATH"
            if [[ "$PREVIEW_BASE_PREFIX" == "/" ]]; then
              PREVIEW_BASE_PREFIX=""
            fi
            PREVIEW_BASE="${PREVIEW_BASE_PREFIX}/pr-preview/pr-${{ github.event.pull_request.number }}/"
            PREVIEW_BASE="/${PREVIEW_BASE#/}"
            pnpm astro build \
              --site "$PREVIEW_ORIGIN" \
              --base "$PREVIEW_BASE"
          else
            FINAL_BASE="$BASE_PATH"
            [[ -z "$FINAL_BASE" ]] && FINAL_BASE="/"
            pnpm astro build \
              --site "$ORIGIN" \
              --base "$FINAL_BASE"
          fi

      - name: Remove CNAME for preview
        if: github.event_name == 'pull_request'
        run: rm -f ./dist/CNAME

      - name: Ensure static site deployment metadata
        run: |
          touch ./dist/.nojekyll
          cat <<'EOF' > ./dist/_config.yml
          defaults:
            - scope:
                path: ""
              values:
                layout: null
                render_with_liquid: false
          EOF

      - name: Deploy PR preview
        if: github.event_name == 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          target-folder: pr-preview/pr-${{ github.event.pull_request.number }}
          clean: true
          force: false

      - name: Ensure Pages metadata files
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const configPath = '_config.yml';
            const configContent = `defaults:
  - scope:
      path: ""
    values:
      layout: null
      render_with_liquid: false
`;

            const getFile = async (path) => {
              try {
                const { data } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path,
                  ref: 'gh-pages',
                });
                return data;
              } catch (error) {
                if (error.status === 404) return null;
                throw error;
              }
            };

            const updateFile = async (path, content, sha) => {
              await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path,
                message: `Ensure Pages metadata file ${path}`,
                content: Buffer.from(content).toString('base64'),
                branch: 'gh-pages',
                sha,
              });
            };

            const existingConfig = await getFile(configPath);
            const existingConfigContent = existingConfig
              ? Buffer.from(existingConfig.content, existingConfig.encoding).toString()
              : null;

            if (existingConfigContent?.trim() !== configContent.trim()) {
              await updateFile(configPath, configContent, existingConfig?.sha);
            }

            const path = `pr-preview/pr-${context.payload.pull_request.number}/CNAME`;
            const existingCname = await getFile(path);
            if (existingCname) {
              await github.rest.repos.deleteFile({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path,
                message: `Remove preview CNAME for PR #${context.payload.pull_request.number}`,
                sha: existingCname.sha,
                branch: 'gh-pages',
              });
            }

      - name: Comment PR with preview link
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr-preview
          message: |
            ðŸš€ Preview deployed!

            Visit https://docs.tenzir.com/pr-preview/pr-${{ github.event.pull_request.number }}/

            This preview updates automatically when you push new commits.

      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          clean: true
          clean-exclude: |
            pr-preview/
          force: false

  cleanup:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Prepare empty preview directory
        run: |
          mkdir -p empty-preview
          touch empty-preview/.gitkeep

      - name: Remove PR preview
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: empty-preview
          target-folder: pr-preview/pr-${{ github.event.pull_request.number }}
          clean: true
          force: false

      - name: Comment PR cleanup
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr-preview
          message: |
            ðŸ§¹ Preview removed.

            The pull request closed, so the preview deployment at https://docs.tenzir.com/pr-preview/pr-${{ github.event.pull_request.number }}/ is gone.
