---
export interface Props {
  title: string;
  description: string;
  href: string;
}

const { title, description, href } = Astro.props;

// Simple markdown to HTML conversion for inline elements
function renderMarkdown(text: string): string {
  return text
    .replace(
      /\[([^\]]+)\]\(([^)]+)\)/g,
      '<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>',
    )
    .replace(/`([^`]+)`/g, "<code>$1</code>")
    .replace(/\*\*([^*]+)\*\*/g, "<strong>$1</strong>")
    .replace(/\*([^*]+)\*/g, "<em>$1</em>");
}

const renderedDescription = renderMarkdown(description);
---

<div class="reference-card">
  <div class="reference-card-header">
    <a href={href} class="reference-card-title-link">
      <h3 class="reference-card-title">{title}</h3>
      <span class="reference-card-arrow">â†’</span>
    </a>
  </div>
  {/* eslint-disable-next-line astro/no-set-html-directive */}
  <div class="reference-card-description" set:html={renderedDescription} />
  <div class="reference-card-example">
    <slot />
  </div>
</div>

<style>
  .reference-card {
    border: 1px solid var(--tnz-neutral-600);
    border-radius: var(--tnz-radius);
    padding: var(--tnz-space-4);
    background: var(--tnz-neutral-800);
    height: 100%;
    display: flex;
    flex-direction: column;
    transition: all var(--tnz-transition-base);
  }



  /* Light mode styles */
  :root[data-theme="light"] .reference-card {
    background-color: var(--tnz-neutral-50);
    border-color: var(--tnz-neutral-300);
  }

  :root[data-theme="light"] .reference-card:hover {
    background-color: var(--tnz-nav-hover-bg);
    box-shadow: var(--tnz-shadow-s-light);
  }

  :root[data-theme="light"] .reference-card-title {
    color: var(--tnz-neutral-800);
  }

  :root[data-theme="light"] .reference-card-description {
    color: var(--tnz-neutral-600);
  }

  :root[data-theme="light"] .reference-card-description code {
    background: var(--tnz-neutral-50);
    border-color: var(--tnz-neutral-300);
  }

  :root[data-theme="light"] .reference-card-example pre {
    background: var(--tnz-neutral-50);
    border-color: var(--tnz-neutral-300);
  }

  /* Dark mode hover effect to match card component */
  :root[data-theme="dark"] .reference-card:hover {
    background-color: var(--tnz-nav-hover-bg);
    box-shadow: var(--tnz-shadow-s);
  }

  .reference-card-title-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .reference-card-title-link:hover {
    color: var(--tnz-color-purple-300);
    text-decoration: none;
  }

  /* Override global markdown link hover styles with higher specificity */
  :global(.sl-markdown-content .reference-card-title-link:hover) {
    text-decoration: none !important;
  }

  .reference-card-header {
    margin-bottom: var(--tnz-space-3);
  }

  .reference-card-title {
    margin: 0;
    font-size: var(--tnz-text-lg);
    font-weight: 600;
    color: var(--tnz-neutral-100);
  }

  .reference-card-description {
    margin: 0 0 var(--tnz-space-4) 0;
    color: var(--tnz-neutral-300);
    line-height: 1.5;
    flex-grow: 1;
  }

  .reference-card-description code {
    background: var(--tnz-neutral-800);
    border: 1px solid var(--tnz-neutral-700);
    padding: var(--tnz-space-1) var(--tnz-space-2);
    border-radius: var(--tnz-radius-sm);
    font-family: var(--tnz-font-mono);
    font-size: 0.875em;
  }

  .reference-card-description a {
    color: var(--tnz-primary-500);
    text-decoration: none;
  }

  .reference-card-description a:hover {
    text-decoration: none;
  }

  .reference-card-example {
    margin-top: var(--tnz-space-3);
  }

  .reference-card-example pre {
    margin: 0;
    padding: var(--tnz-space-2);
    background: var(--tnz-neutral-800);
    border: 1px solid var(--tnz-neutral-700);
    border-radius: var(--tnz-radius-md);
    font-size: var(--tnz-text-xs);
    overflow-x: auto;
    font-family: var(--tnz-font-mono);
  }

  .reference-card-arrow {
    color: var(--tnz-primary-500);
    font-size: 1.25rem;
    opacity: 0;
    transition: opacity var(--tnz-transition-base);
  }

  .reference-card-title-link:hover .reference-card-arrow {
    opacity: 1;
  }
</style>
