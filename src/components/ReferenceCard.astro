---
export interface Props {
  title: string;
  description: string;
  href: string;
}

const { title, description, href } = Astro.props;

// Simple markdown to HTML conversion for inline elements
function renderMarkdown(text: string): string {
  return text
    .replace(
      /\[([^\]]+)\]\(([^)]+)\)/g,
      '<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>',
    )
    .replace(/`([^`]+)`/g, "<code>$1</code>")
    .replace(/\*\*([^*]+)\*\*/g, "<strong>$1</strong>")
    .replace(/\*([^*]+)\*/g, "<em>$1</em>");
}

const renderedDescription = renderMarkdown(description);
---

<div class="function-card">
  <a href={href} class="function-card-link">
    <div class="function-card-header">
      <h3 class="function-card-title">{title}</h3>
      <span class="function-card-arrow">â†’</span>
    </div>
    {/* eslint-disable-next-line astro/no-set-html-directive */}
    <div class="function-card-description" set:html={renderedDescription} />
  </a>
  <div class="function-card-example">
    <slot />
  </div>
</div>

<style>
  .function-card {
    border: 1px solid var(--sl-color-gray-5);
    border-radius: var(--tnz-radius);
    padding: 1rem;
    background: var(--sl-color-bg-sidebar);
    transition: all 0.2s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    min-width: 150px;
  }

  .function-card:hover {
    background-color: var(--sl-color-gray-7);
    border-color: var(--sl-color-text-accent);
    box-shadow: var(--tnz-shadow-s);
  }

  .function-card-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  .function-card-link:hover {
    text-decoration: none !important;
  }

  .function-card-link:hover * {
    text-decoration: none !important;
  }

  .function-card-title,
  .function-card-description,
  .function-card-arrow {
    text-decoration: none !important;
  }

  .function-card-link:hover .function-card-title,
  .function-card-link:hover .function-card-description,
  .function-card-link:hover .function-card-arrow {
    text-decoration: none !important;
  }

  .function-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .function-card-title {
    margin: 0;
    font-size: var(--tnz-text-lg);
    font-weight: 600;
    color: var(--sl-color-white);
    font-family: var(--tnz-font-sans);
  }

  .function-card-description {
    margin: 0 0 1rem 0;
    color: var(--sl-color-gray-2);
    line-height: 1.5;
    flex-grow: 1;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: 3em;
    word-break: break-word;
  }

  .function-card-description code {
    background: var(--sl-color-bg-nav);
    padding: 0.125rem 0.25rem;
    border-radius: var(--tnz-radius-sm);
    font-family: var(--tnz-font-mono);
    font-size: 0.875em;
    color: var(--sl-color-text);
  }

  .function-card-description strong {
    font-weight: 600;
    color: var(--sl-color-white);
  }

  .function-card-description em {
    font-style: italic;
  }

  .function-card-description a {
    color: var(--sl-color-text-accent);
    text-decoration: none;
  }

  .function-card-description a:hover {
    text-decoration: underline;
  }

  .function-card-example {
    margin-top: auto;
    pointer-events: none;
  }

  .function-card-example pre {
    margin: 0;
    padding: 0.5rem;
    background: var(--sl-color-bg-nav);
    border: 1px solid var(--sl-color-gray-6);
    border-radius: var(--tnz-radius-md);
    font-size: var(--tnz-text-xs);
    overflow: hidden;
    font-family: var(--tnz-font-mono);
    max-width: 100%;
    white-space: nowrap;
    text-overflow: ellipsis;
    line-height: 1.4;
  }

  .function-card-example code {
    background: none;
    padding: 0;
    font-family: var(--tnz-font-mono);
    color: var(--sl-color-text);
    font-size: var(--tnz-text-xs);
    line-height: 1.4;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
  }

  /* TQL syntax highlighting color variables */
  :root {
    --tql-type-color: #0969da;
    --tql-operator-color: #953800;
    --tql-param-color: #6f42c1;
    --tql-punctuation-color: #656d76;
  }

  .dark {
    --tql-type-color: #79c0ff;
    --tql-operator-color: #ffa657;
    --tql-param-color: #d2a8ff;
    --tql-punctuation-color: #8b949e;
  }

  .function-card-arrow {
    color: var(--sl-color-text-accent);
    font-size: 1.25rem;
    opacity: 0;
    transition: opacity 0.2s ease;
    flex-shrink: 0;
  }

  .function-card-link:hover .function-card-arrow {
    opacity: 1;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .function-card {
      padding: 0.75rem;
      max-width: none;
    }

    .function-card-title {
      font-size: var(--tnz-text-base);
    }

    .function-card-example pre {
      padding: 0.375rem;
      font-size: calc(var(--tnz-text-xs) * 0.9);
    }

    .function-card-example code {
      font-size: calc(var(--tnz-text-xs) * 0.9);
    }
  }
</style>
