---
export interface Props {
  title: string;
  description?: string;
  variant?: 'default' | 'primary' | 'success' | 'warning' | 'error';
  icon?: string;
  href?: string;
}

const { title, description, variant = 'default', icon, href } = Astro.props;

// Variant will be applied as a data-attribute for CSS styling

const Component = href ? 'a' : 'div';
const isExternal = href && (href.startsWith('http://') || href.startsWith('https://'));
---

<Component
  class={`example-card ${href ? 'example-card--link' : ''}`}
  data-variant={variant}
  href={href}
  {...(isExternal && { target: '_blank', rel: 'noopener noreferrer' })}
>
  <div class="example-card__header">
    {icon && (
      <div class="example-card__icon">
        <span class="tnz-text-2xl">{icon}</span>
      </div>
    )}
    <h3 class="example-card__title">{title}</h3>
    {href && (
      <span class="example-card__arrow" aria-hidden="true">
        →
      </span>
    )}
  </div>
  
  {description && (
    <p class="example-card__description">
      {description}
    </p>
  )}
  
  <div class="example-card__content">
    <slot />
  </div>
</Component>

<style>
  /* Base card styles using Tenzir design tokens */
  .example-card {
    display: block;
    padding: var(--tnz-space-6); /* Use Tenzir spacing token directly */
    border: 1px solid var(--sl-color-gray-5); /* Default border for dark mode, overridden for light */
    background-color: var(--sl-color-bg-sidebar); /* Default background, overridden for light */
    border-radius: var(--tnz-radius);
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }
  
  /* Link variant styles */
  .example-card--link {
    text-decoration: none;
    color: inherit;
    cursor: pointer;
  }
  
  .example-card--link:hover {
    transform: translateY(-2px);
    box-shadow: var(--tnz-shadow-m);
  }
  
  .example-card--link:hover .example-card__arrow {
    opacity: 1;
    transform: translateX(0);
  }
  
  /* Header layout */
  .example-card__header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }
  
  /* Icon styling */
  .example-card__icon {
    flex-shrink: 0;
    width: 2.5rem;
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--tnz-radius-md);
    background-color: var(--sl-color-bg-inset); /* Use theme-aware inset background */
  }
  
  /* Title styling */
  .example-card__title {
    margin: 0;
    font-size: var(--tnz-text-lg);
    font-weight: 600;
    font-family: var(--tnz-font-sans);
    color: var(--sl-color-white);
    flex: 1;
  }
  
  /* Arrow indicator */
  .example-card__arrow {
    font-size: var(--tnz-text-xl);
    color: var(--sl-color-text-accent);
    opacity: 0;
    transform: translateX(-0.5rem);
    transition: all 0.2s ease;
  }
  
  /* Description text */
  .example-card__description {
    margin: 0 0 1rem 0;
    font-size: var(--tnz-text-sm);
    color: var(--sl-color-gray-2);
    line-height: var(--sl-line-height-body);
  }
  
  /* Content slot */
  .example-card__content {
    font-size: var(--tnz-text-sm);
  }
  
  /* Variant specific styles */

  /* Light Mode Variant Styles */
  :global([data-theme="light"]) .example-card[data-variant="default"] {
    border-color: var(--tnz-neutral-300);
    background-color: var(--tnz-neutral-50);
  }
  :global([data-theme="light"]) .example-card[data-variant="default"] .example-card__icon span {
    color: var(--tnz-neutral-600);
  }

  :global([data-theme="light"]) .example-card[data-variant="primary"] {
    border-color: var(--tnz-primary-300);
    background-color: var(--tnz-primary-50);
  }
  :global([data-theme="light"]) .example-card[data-variant="primary"] .example-card__icon span {
    color: var(--tnz-primary-600);
  }

  :global([data-theme="light"]) .example-card[data-variant="success"] {
    border-color: var(--tnz-green-300);
    background-color: var(--tnz-green-200);
  }
  :global([data-theme="light"]) .example-card[data-variant="success"] .example-card__icon span {
    color: var(--tnz-green-600);
  }

  :global([data-theme="light"]) .example-card[data-variant="warning"] {
    border-color: var(--tnz-yellow-300);
    background-color: var(--tnz-yellow-200);
  }
  :global([data-theme="light"]) .example-card[data-variant="warning"] .example-card__icon span {
    color: var(--tnz-yellow-600);
  }

  :global([data-theme="light"]) .example-card[data-variant="error"] {
    border-color: var(--tnz-red-300);
    background-color: var(--tnz-red-100);
  }
  :global([data-theme="light"]) .example-card[data-variant="error"] .example-card__icon span {
    color: var(--tnz-red-600);
  }

  /* Dark Mode Variant Styles */
  /* Default variant in dark mode uses base .example-card styles for border and background */
  :global([data-theme="dark"]) .example-card[data-variant="default"] {
    /* Base styles are already dark mode for default variant */
    border-color: var(--tnz-neutral-600); /* Slightly adjust border for default dark */
    background-color: var(--sl-color-bg-sidebar); /* Ensure consistency */
  }
  :global([data-theme="dark"]) .example-card[data-variant="default"] .example-card__icon span {
    color: var(--tnz-neutral-300);
  }

  :global([data-theme="dark"]) .example-card[data-variant="primary"] {
    border-color: var(--tnz-primary-500);
    background-color: color-mix(in srgb, var(--tnz-primary-500) 20%, var(--sl-color-bg-sidebar));
  }
  :global([data-theme="dark"]) .example-card[data-variant="primary"] .example-card__icon span {
    color: var(--tnz-primary-200);
  }

  :global([data-theme="dark"]) .example-card[data-variant="success"] {
    border-color: var(--tnz-green-500);
    background-color: color-mix(in srgb, var(--tnz-green-500) 20%, var(--sl-color-bg-sidebar));
  }
  :global([data-theme="dark"]) .example-card[data-variant="success"] .example-card__icon span {
    color: var(--tnz-green-200);
  }

  :global([data-theme="dark"]) .example-card[data-variant="warning"] {
    border-color: var(--tnz-yellow-500);
    background-color: color-mix(in srgb, var(--tnz-yellow-500) 20%, var(--sl-color-bg-sidebar));
  }
  :global([data-theme="dark"]) .example-card[data-variant="warning"] .example-card__icon span {
    color: var(--tnz-yellow-200);
  }

  :global([data-theme="dark"]) .example-card[data-variant="error"] {
    border-color: var(--tnz-red-500);
    background-color: color-mix(in srgb, var(--tnz-red-500) 20%, var(--sl-color-bg-sidebar));
  }
  :global([data-theme="dark"]) .example-card[data-variant="error"] .example-card__icon span {
    color: var(--tnz-red-200);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .example-card {
      padding: 1rem;
    }
    
    .example-card__title {
      font-size: var(--tnz-text-base);
    }
  }
</style>

<!-- Usage Examples:

Basic card:
<ExampleCard title="Basic Card">
  <p>This is a basic card with default styling.</p>
</ExampleCard>

Primary variant with icon:
<ExampleCard 
  title="Primary Card" 
  description="This demonstrates the primary variant"
  variant="primary"
  icon="🚀"
>
  <code>variant="primary"</code>
</ExampleCard>

Success card with link:
<ExampleCard 
  title="Success Card" 
  description="Click to learn more"
  variant="success"
  icon="✅"
  href="/docs/success"
>
  <p>This card is clickable!</p>
</ExampleCard>

Warning card:
<ExampleCard 
  title="Warning" 
  description="Important information"
  variant="warning"
  icon="⚠️"
>
  <ul>
    <li>Uses Tenzir design tokens</li>
    <li>Responsive design</li>
    <li>Dark mode support</li>
  </ul>
</ExampleCard>

Error card with external link:
<ExampleCard 
  title="Error Example" 
  variant="error"
  icon="❌"
  href="https://example.com"
>
  <p>External links open in new tab</p>
</ExampleCard>
-->