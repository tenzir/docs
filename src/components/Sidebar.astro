---
import { Badge, Icon } from '@astrojs/starlight/components';
import Default from '@astrojs/starlight/components/Sidebar.astro';

import { topicParents, childTopics } from '../topics.ts';

const { topics } = Astro.locals.starlightSidebarTopics;

// Find the current topic
const currentTopic = topics.find((topic) => topic.isCurrent);
if (!currentTopic) {
  console.warn('No current topic found — skipping topic-specific rendering');
}

// If current is a root → show its children
// If current is a child → show its siblings
const currentLabel = currentTopic.label;
const parentLabel = topicParents[currentLabel];
const rootLabel = parentLabel ?? currentLabel;

// Get the list of child topic labels (could be empty)
const sidebarTopicLabels = childTopics(rootLabel);
const sidebarTopics = topics.filter((t) => sidebarTopicLabels.includes(t.label));
---

{sidebarTopics.length > 0 && (
  <ul class="starlight-sidebar-topics">
    {
      sidebarTopics.map((topic) => (
        <li>
          <a href={topic.link} class:list={{ 'starlight-sidebar-topics-current': topic.isCurrent }}>
            {topic.icon && (
              <div class="starlight-sidebar-topics-icon">
                <Icon name={topic.icon} />
              </div>
            )}
            <div>
              {topic.label}
              {topic.badge && (
                <Badge
                  class="starlight-sidebar-topics-badge"
                  text={topic.badge.text}
                  variant={topic.badge.variant}
                />
              )}
            </div>
          </a>
        </li>
      ))
    }
  </ul>
)}

<Default><slot /></Default>

<style>
  ul {
    list-style: none;
    padding: 0;
  }

  ul::after {
    content: '';
    display: block;
    margin-top: 1rem;
    height: 1px;
    border-top: 1px solid var(--sl-color-hairline-light);
  }

  li {
    overflow-wrap: anywhere;
  }

  li + li {
    margin-top: 0.25rem;
  }

  a {
    align-items: center;
    color: var(--sl-color-white);
    display: flex;
    font-size: var(--sl-text-base);
    font-weight: 600;
    gap: 0.5rem;
    line-height: 1.5;
    padding: 0.3em 0.5rem;
    text-decoration: none;
    border-radius: var(--tnz-radius-sm);
    transition: all var(--tnz-transition-base);
  }

  a:hover, a:focus-visible {
    background-color: var(--tnz-nav-hover-bg);
    color: var(--sl-color-white);
  }

  a.starlight-sidebar-topics-current {
    background-color: var(--tnz-nav-active-bg);
    color: var(--sl-color-white);
    border-left: 3px solid var(--tnz-nav-active-border);
    padding-left: calc(0.5rem - 3px);
  }

  :global([data-theme='light']) a {
    color: var(--sl-color-text);
  }

  :global([data-theme='light']) a:hover,
  :global([data-theme='light']) a:focus-visible {
    color: var(--sl-color-text);
  }

  :global([data-theme='light']) a.starlight-sidebar-topics-current {
    color: var(--sl-color-text);
  }

  .starlight-sidebar-topics-icon {
    align-items: center;
    border-radius: 0.25rem;
    border: 1px solid var(--sl-color-gray-5);
    display: flex;
    justify-content: center;
    padding: 0.25rem;
    transition: all var(--tnz-transition-base);
  }

  a:hover .starlight-sidebar-topics-icon,
  a:focus-visible .starlight-sidebar-topics-icon {
    border-color: var(--sl-color-gray-4);
  }

  a.starlight-sidebar-topics-current .starlight-sidebar-topics-icon {
    border-color: var(--sl-color-gray-4);
  }

  .starlight-sidebar-topics-badge {
    margin-inline-start: 0.25em;
  }
</style>
